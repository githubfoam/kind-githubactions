name: "kind Ubuntu CI workflow"


on:
  push:
    branches: [ test ]
  # schedule:
      # https://crontab.guru/
      # https://docs.github.com/en/actions/reference/events-that-trigger-workflows
      # - cron:  '0 0 * * FRI' ##execution of a task in the first minute of the month  


jobs:

  kind-binary-ubuntu-latest-job:
    name: "Installing From Release Binaries ubuntu-latest job"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinti  ng"
      run: hostnamectl status
      # https://kind.sigs.k8s.io/docs/user/quick-start/
    - name: "Installing From Release Binaries" 
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64
        chmod +x ./kind 
        mv ./kind /usr/local/bin/kind    
        # Default cluster context name is `kind`.
        kind create cluster 
        kind create cluster --name kind-3
        kind get clusters       
        #kind is prefixed to the context and cluster names, for example: kind-istio-testing
        kubectl config get-contexts 
        kubectl cluster-info --context kind-kind
        kubectl cluster-info --context kind-kind-3

  kind-binary-cfg-ubuntu-latest-job:
    name: "Installing From Release Binaries with cfg yaml ubuntu-latest job"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinti  ng"
      run: hostnamectl status
      # https://kind.sigs.k8s.io/docs/user/quick-start/
    - name: "Installing From Release Binaries with cfg yaml" 
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64
        chmod +x ./kind 
        mv ./kind /usr/local/bin/kind
        kind create cluster --config platform/kind-example-config.yaml        
        kind get clusters
        # kubectl cluster-info --context kind-kind
        # kubectl cluster-info --context kind-kind-2

  kind-binary-cfg-multi-controlplane-ubuntu-latest-job:
    name: "Installing From Release Binaries with cfg yaml multi controlplane ubuntu-latest job"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinti  ng"
      run: hostnamectl status
    - name: "Installing From Release Binaries with cfg yaml multi controlplane" 
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64
        chmod +x ./kind 
        mv ./kind /usr/local/bin/kind    
        kind create cluster --config platform/kind-example-config.yaml        
        kind get clusters
        # kubectl cluster-info --context kind-kind
        # kubectl cluster-info --context kind-kind-2        
    # - name: "create cluster" 
    #   run: sudo kind create cluster --config=platform/kind-config.yaml             
    # - name: "kubectl cluster-info" 
    #   run: sudo kubectl cluster-info --context kind-kind 

  # ubuntu-2004-job:
  #   name: "ubuntu-20.04 minikube job"
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status         
  #   - name: "deploy kind" 
  #     run: sudo make deploy-kind      
  #   - name: "create cluster" 
  #     run: sudo kind create cluster --config=platform/kind-config.yaml             
  #   - name: "kubectl cluster-info" 
  #     run: sudo kubectl cluster-info --context kind-kind  

  # ubuntu-1804-job:
  #   name: "ubuntu-18.04 minikube job"
  #   runs-on: ubuntu-18.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status          
  #   - name: "deploy kind" 
  #     run: sudo make deploy-kind      
  #   - name: "create cluster" 
  #     run: sudo kind create cluster --config=platform/kind-config.yaml             
  #   - name: "kubectl cluster-info" 
  #     run: sudo kubectl cluster-info --context kind-kind 

  #deprecated
  # ubuntu-1604-job:
  #   name: "ubuntu-16.04 minikube job"
  #   runs-on: ubuntu-16.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status       
  #   - name: "deploy kind" 
  #     run: sudo make deploy-kind      
  #   - name: "create cluster" 
  #     run: sudo kind create cluster --config=platform/kind-config.yaml             
  #   - name: "kubectl cluster-info" 
  #     run: sudo kubectl cluster-info --context kind-kind

